#include <iostream>
#include <fstream>

using namespace std;

struct Book
{
	static const int BUFFER_SIZE = 20;
	int Id;
	char Title[BUFFER_SIZE];
	char Author[BUFFER_SIZE];
	float Price;
	int Quantity;
};

void sort(Book books[], int size) {
	Book buf;
	for (int i = 0; i < size; i++) {
		for (int j = 0; j < size; j++) {
			if (strcmp(books[i].Author > books[j].Author) > 0) {
				buf = books[i];
				books[i] = books[j];
				books[j] = buf;
			}
		}
	}
	for (int i = 0; i < size; i++) {
		for (int j = 0; j < size; j++) {
			if ((books[i].Title > books[j].Title)and(books[i].Author == books[j].Author)) {
				buf = books[i];
				books[i] = books[j];
				books[j] = buf;
			}
		}
	}
	ofstream fout("books.bin", istream::out | istream::binary);
	fout.write(reinterpret_cast<char*>(&books[0]), sizeof(Book) * 5);
	fout.close();
}

void redakt(Book books[], int size) {
	cout << "Введите ID" << endl;
	int id;
	cin >> id;
	int data;
	for (int i = 0; i < size; i++) {
		if (books[i].Id == id) {
			data = i;
			exit;
		}
    }
	int cho=0;
	while (cho != 0) {
		    cho = 0;
		    cout << "1: Изменить название" << endl;
	        cout << "2: Изменить автора" << endl;
	        cout << "3: Изменить цену" << endl;
	        cout << "4: Изменить количество" << endl;
			cin >> cho;
	        if (cho = 1) {
		        cout << "Вводите:" << endl;
		        cin >> books[data].Title;
	        }
			if (cho = 2) {
				cout << "Вводите:" << endl;
				cin >> books[data].Author;
			}
			if (cho = 3) {
				cout << "Вводите:" << endl;
				cin >> books[data].Price;
			}
			if (cho = 4) {
				cout << "Вводите:" << endl;
				cin >> books[data].Quantity;
			}
	}
	ofstream fout("books.bin", istream::out | istream::binary);
	fout.write(reinterpret_cast<char*>(&books[0]), sizeof(Book) * 5);
	fout.close();
	}
	
void stata(Book books[], int size) {
	float sumprice=0;
	int count=0;
	int sred=0;
	for (int i = 0; i < size; i++) {
		sumprice =sumprice+ books[i].Price;
		count += 1;
	}
	cout << "Общaя стоимость книг: "<<sumprice<<endl;
	cout << "Средняя стоимость книги: " <<sred << endl;
	cout << "Всего книг: " << count  << endl;
}
void dobav(Book* &books, int &size) {
	Book* data = new Book[size + 1]{};
	for (int i = 0; i < size + 1; i++) {
		data[i] = books[i];
	}
	delete[] books;
	books = data;
	ofstream fout("books.bin", istream::out | istream::binary);
	fout.write(reinterpret_cast<char*>(&books[0]), sizeof(Book) * 5);
	fout.close();
 }
void print(Book books[], int size) {
	for (int i = 0; i < size; i++) {
		cout << books[i].Id;
		cout << books[i].Title;
		cout << books[i].Author;
		cout << books[i].Price;
		cout << books[i].Quantity << endl;
	}
}
int main()
{ 
	setlocale(0,"");
	ifstream fin("books.bin", istream::in | istream::binary);
	fin.seekg(0, ios_base::end); 
	int size = fin.tellg();
	int num = size / sizeof(Book);
	fin.seekg(0, ios_base::beg);
	Book* books = new Book[num];
	fin.read(reinterpret_cast<char*>(books), sizeof(Book) * num);
	fin.close();
	int ch = 9;
	while(ch!=0){
	ch = 0;
	cout << "Выберите функцию" << endl;
	cout << "1: Дополнить файл" << endl;
	cout << "2: Отсортировать файл" << endl;
	cout << "3: Редактировать книгу" << endl;
	cout << "4: Статистика" << endl;
	cout << "5: Вывод" << endl;
	cout << "0: Выход" << endl;
	cin >> ch;
    if (ch == 1) dobav(books, num);
    if (ch == 2) sort(books, num);
    if (ch == 3) redakt(books, num);
    if (ch == 4) stata(books, num);
	if (ch == 5) print(books, size);
	}
	/*FILE* bookfile = fopen("books.bin", "rb");
	fseek(bookfile, 0, SEEK_END);
	int size = ftell(bookfile);
	int num = size / sizeof(Book);
	Book* books= new Book[num];
	if (bookfile) {
		fread(&books, sizeof(Book), num, bookfile);
	}*/
	/*FILE* bookfile = fopen("books.bin", "wb");
	if (bookfile) {
		fwrite(&books, sizeof(Book), size, bookfile);
	}
	fclose(bookfile);*/
}


















#include <iostream>
#include <fstream>

using namespace std;
struct Book
{
	static const int BUFFER_SIZE = 20;
	int Id;
	char Title[BUFFER_SIZE];
	char Author[BUFFER_SIZE];
	float Price;
	int Quantity;
};

int main()
{
	Book books[10];
	for (int i = 0; i < 10; i++) {
		cout << i << endl;
		cin >> books[i].Id;
		cin >> books[i].Title;
		cin >> books[i].Author;
		cin >> books[i].Price;
		cin >> books[i].Quantity;
	}
	ofstream fout("books.bin", istream::out | istream::binary);
	fout.write(reinterpret_cast<char*>(&books[0]), sizeof(Book) * 5);
	fout.close();
}